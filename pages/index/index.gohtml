{{define "head"}}
    <script>
		function registerAddSongSubmitter() {
			/**
			 * @type {HTMLFormElement}
			 */
			const form = document.getElementById("music");
			form.addEventListener("submit", (event) => {
				event.preventDefault();

				const formData = new FormData(form);
				console.debug("Sending form", { formData: Object.fromEntries(formData.entries()) });

				const button = event.submitter;
				button.disabled = true;

				fetch("/songQueue", {
					method: "POST",
					body: formData,
					credentials: "include"
				}).then((response) => {
					if (!response.ok) {
						return;
					}

					form.reset();
				}).catch((error) => {
					console.error("Failed to send music", error);
				}).finally(() => {
					button.disabled = false;
				});
			});
		}

		function initWebsockets() {
			const webSocket = new WebSocket(`ws://${document.location.host}/ws`);
			webSocket.addEventListener("error", (error) => {
				console.error("websocket error:", error);
			});
			webSocket.addEventListener("open", () => {
				console.debug("websockets opened");
			});
			webSocket.addEventListener("close", () => {
				console.debug("websockets closed");
			});
			webSocket.addEventListener("message", (event) => {
				console.debug("Received message:", event.data);
			});
		}

		function initPingButton() {
			/**
			 * @type {HTMLButtonElement}
			 */
			const button = document.getElementById("ping");
			button.addEventListener("click", () => {
				fetch("/ping", {
					method: "POST",
					credentials: "include"
				});
			});
		}

		function initGetSongQueueButton() {
			/**
			 * @type {HTMLButtonElement}
			 */
			const button = document.getElementById("getSongQueue");
			button.addEventListener("click", () => {
				fetch("/getSongQueue", {
					credentials: "include"
				}).then(async (response) => {
					if (!response.ok) {
						console.error("Failed to get song queue");
						const body = await response.text();
						console.error("Response body:", body);
						return;
					}

					/**
					 * @typedef {Object} SongQueueItemDTO
					 * @property {number} queueSongId
					 * @property {number} songId
					 * @property {string} startsAt
					 */

					/**
					 * @type {SongQueueItemDTO[]}
					 */
					const songQueueItems = await response.json();
					console.log(songQueueItems);
				}).catch((error) => {
					console.error("Song queue fetch failed");
					console.error(error);
				});

			});
		}

		function initQueueDisplay() {
		}

		document.addEventListener("DOMContentLoaded", () => {
			console.debug("ready");
			registerAddSongSubmitter();
			initWebsockets();
			initPingButton();
			initGetSongQueueButton();
		});
    </script>
{{end}}

{{define "content"}}
    <form id="music">
        <div class="form-control">
            <label for="songUrl">Song</label>
            <input type="text" id="songUrl" name="songUrl" required>
        </div>

        <button type="submit">Add</button>
    </form>
    <button type="button" id="ping">
        ping?
    </button>
    <button type="button" id="getSongQueue">
        get song queue
    </button>
    <div id="songQueue">

    </div>
{{end}}
