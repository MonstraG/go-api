{{define "head"}}
	<style>
		h1 {
			margin-bottom: 32px;
		}

		article {
			display: flex;
			flex-direction: column;
			gap: 32px;
		}

		.songs {
			max-width: 600px;
			min-height: 300px;

			.folder-view {
				width: 100%;
			}

			h3 {
				font-size: 16px;
				margin-bottom: 4px;
			}

			table {
				width: 100%;
				border-collapse: collapse;

				.clickable {
					cursor: pointer;

					&:hover {
						background: color-mix(in srgb, transparent, var(--foreground) 10%);
					}

					&:active {
						background: color-mix(in srgb, transparent, var(--foreground) 20%);
					}
				}

				td {
					img {
						display: flex;
					}

					vertical-align: middle;
					padding: 4px 6px;

					&.min-width {
						width: 1px;
					}

					&.align-start {
						text-align: start;
					}

					&.align-end {
						text-align: end;
					}

					&.short {
						width: 1px;
					}
				}
			}

			#file-upload-form {
				padding-block: 8px;


				#file-input {
					width: 100%;
					margin-bottom: 8px;
					font-size: 1rem;
				}

				#file-upload-submit-block {
					display: flex;
					flex-direction: row;
					gap: 16px;
				}

				#file-upload-progress {
					flex-grow: 1;
				}
			}
		}
	</style>
	<script>
		htmx.onLoad(function initUploadForm() {
			/** @type {HTMLFormElement | undefined} */
			const fileUploadForm = htmx.find("#file-upload-form");
			if (!fileUploadForm) {
				console.debug("File upload progress not found, waiting");
				return;
			}

			htmx.on(fileUploadForm, "htmx:responseError", function logUploadError(error) {
				console.error(error);
			});

			/** @type {HTMLProgressElement | undefined} */
			const fileUploadProgress = htmx.find("#file-upload-progress");
			if (!fileUploadProgress) {
				console.error("File upload form found, but not fileUploadProgress!");
				return;
			}

			htmx.on(fileUploadForm, "htmx:xhr:progress", function setUploadProgress(event) {
				fileUploadProgress.style.display = "block";
				const progressValue = event.detail.loaded / event.detail.total * 100;
				fileUploadProgress.setAttribute("value", progressValue.toString());
			});
		});
	</script>
{{end}}

{{define "content"}}
	<h1>Homepage</h1>
	<article>
		<h2>Available songs</h2>
		<div class="card songs" hx-get="/listSongs" hx-trigger="load" id="songs-browser"></div>
	</article>
{{end}}
